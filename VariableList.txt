$$name[...path?] 
Retrieves the value for a customVariable. If path is specified, walks the item before returning the value

Other examples 
$$example 
Returns the value of the customVariable 'example'; Synonymous with $customVariable[example]

$$example[path, to, value] 
Returns the value of the customVariable 'example'; Synonymous with $customVariable[example, path.to.value]

$&name[...path?] 
Retrieves the value for an effectOutput. If path is specified, walks the item before returning the value

Other examples 
$&example 
Returns the value of the effectOutput 'example'; Synonymous with $effectOutput[example]

$&example[path, to, value] 
Returns the value of the effectOutput 'example'; Synonymous with $effectOutput[example, path.to.value]

$accountCreationDate 
The creation date of your Twitch account.

Other examples 
$accountCreationDate[$target] 
When in a command, gets the creation date for the target user's Twitch account.

$accountCreationDate[$user] 
Gets the creation date for associated user's Twitch account (Ie who triggered command, pressed button, etc).

$accountCreationDate[ChannelOne] 
Gets the creation date for a specific user's Twitch account/channel.

$activeChatUserCount 
Get the number of active viewers in chat.

$ALL[condition, condition, ...] 
Returns true if all of the conditions are true. Only works within $if[]

Other examples 
$ALL[a === a, b === b] 
Returns true as a equals a and b equals b

$AND[condition, condition, ...] 
Returns true if all of the conditions are true. Only works within $if[]

Other examples 
$AND[a === a, b === b] 
Returns true as a equals a and b equals b

$ANY[condition, condition, ...] 
Returns true if any of the conditions are true. Only works within $if[]

Other examples 
$ANY[a === b, c === c] 
Returns true as c equals c

$arg[#] 
Grabs the command argument (aka a word after the command !trigger) at the given index.

Other examples 
$arg[1,2] 
Grab a range of args.

$arg[2,last] 
Grab a range of args up to the last arg.

$arg[all] 
Grab all args. This is a good way to grab all text after the !command trigger.

$argArray 
Returns an array of command arguments

$argCount 
Returns the number of command args.

$arrayAdd[array, new-item, at-start] 
Returns a new array with the added element

Other examples 
$arrayAdd["[1,2,3]", 4] 
Returns a new array with 4 added to the end of the array. (1,2,3,4)

$arrayAdd["[1,2,3]", 4, true] 
Returns a new array with 4 added to the start of the array. (4,1,2,3)

$arrayAdd[rawArray, 4] 
Returns a new array with 4 added to the end of the raw array

$arrayAdd[rawArray, 4, true] 
Returns a new array with 4 added to the start of the raw array

$arrayElement[array, index] 
Returns the element at the given index of the input array.

Other examples 
$arrayElement["[1,2,3]", 0] 
Returns the element at the 0 index (1)

$arrayElement["[1,2,3]", first] 
Returns the element at the first index (1)

$arrayElement["[1,2,3]", last] 
Returns the element at the last index (3)

$arrayElement[rawArray, 0] 
Returns the element at the 0 index

$arrayElement[rawArray, first] 
Returns the element at the first index

$arrayElement[rawArray, last] 
Returns the element at the last index

$arrayFilter[array, matcher, propertyPath, removeMatches] 
Returns a new filtered array.

Other examples 
$arrayFilter["[1,2,3]", 1, null, false] 
Filter out anything that doesn't equal 1 (new array: [1])

$arrayFilter["[1,2,3]", 1, null, true] 
Filter out anything that equals 1 (new array: [2,3])

$arrayFilter["[{\"username\": \"ebiggz\"},{\"username\": \"MageEnclave\"}]", ebiggz, username, true] 
Filter out anything that has a username property which equals "ebiggz" (new array: [{"username": "MageEnclave"}])

$arrayFilter[rawArray, 1, null, false] 
Filter out anything that doesn't equal 1

$arrayFilter[rawArray, 1, null, true] 
Filter out anything that equals 1

$arrayFilter[rawArray, value, key, true] 
Filter out any item in the array that has a key property twitch equals "value"

$arrayFindIndex[array, matcher, propertyPath?, exact?] 
Finds a matching element in the array and returns its index, or null if the element is absent

Other examples 
$arrayFindIndex["[\"a\",\"b\",\"c\"]", b] 
Returns 1 , the index of "b"

$arrayFindIndex["[{\"username\": \"alastor\"},{\"username\": \"ebiggz\"}]", alastor, username] 
Returns 0, the index of the object where "username"="alastor"

$arrayFindIndex["[0,1,2,"1"]", "1", null, $true] 
Returns 3, the index of the text "1"

$arrayFindIndex[rawArray, b] 
Returns 1, the index of "b"

$arrayFindIndex[rawArray, value, key] 
Searches the array for an item with a key with the value of "value"

$arrayFindWithNull[array, matcher, propertyPath?, exact?] 
Finds a matching element in the array or returns a literal null

Other examples 
$arrayFindWithNull["[1,2,3]", 1] 
Finds 1 in the array

$arrayFindWithNull["[{\"username\": \"ebiggz\"},{\"username\": \"MageEnclave\"}]", ebiggz, username] 
Finds object with username of "ebiggz"

$arrayFindWithNull["[0,1,2,"1"]", 1, null, true] 
Returns the text '1'

$arrayFindWithNull[rawArray, value] 
Searches each item in the array for "value" and returns the first matched item

$arrayFindWithNull[rawArray, value, key] 
Searches each item in the array for an item that has a "key" property that equals "value"

$arrayFrom[value, value, ...] 
Returns a raw array containing the listed values

$arrayJoin[array, separator] 
Returns a string with each array item joined together with the given separator

$arrayLength[array] 
Returns the length of the input array.

$arrayRandomItem[array] 
Returns a random item from the given array

$arrayRemove[array, index] 
Returns a new array with the element at the given index removed

Other examples 
$arrayRemove["[1,2,3]", 0] 
Removes the element at the 0 index (2,3)

$arrayRemove["[1,2,3]", first] 
Removes the element at the first index (2,3)

$arrayRemove["[1,2,3]", last] 
Removes the element at the last index (1,2)

$arrayRemove[rawArray, 0] 
Removes the element at the 0 index

$arrayRemove[rawArray, first] 
Removes the element at the first index

$arrayRemove[rawArray, last] 
Removes the element at the last index

$arrayReverse[array] 
Returns a new reversed array

$arrayShuffle[array] 
Returns a new shuffled array

$audioDuration[filePathOrUrl] 
Attempts to retrieve audio duration.

$bitsCheered[username] 
Returns the all-time number of bits the specified user has cheered in the streamer's channel.

Other examples 
$bitsCheered[username, period] 
Returns the number of bits the specified user has cheered in the streamer's channel during the current specified period. Period can be 'day', 'week', 'month', 'year', or 'all'.

$bitsCheered[username, period, startDate] 
Returns the number of bits the specified user has cheered in the streamer's channel during the specified period that occurred on the specified date. Period can be 'day', 'week', 'month', 'year', or 'all'.

$bitsLeaderboard[count] 
Returns an array of the all-time bits leaderboard of the streamer's channel, up to the specified count. Each object in the array has a username and amount.

Other examples 
$bitsLeaderboard[count, period] 
Returns an array of the bits leaderboard of the streamer's channel during the current specified period, up to the specified count. Each object in the array has a username and amount. Period can be 'day', 'week', 'month', 'year', or 'all'.

$bitsLeaderboard[count, period, startDate] 
Returns an array of the bits leaderboard of the streamer's channel during the specified period that occurred on the specified date, up to the specified count. Each object in the array has a username and amount. Period can be 'day', 'week', 'month', 'year', or 'all'.

$bot 
Outputs the Bot account username.

$capitalize[text] 
Capitalizes the given text.

$category 
Aliases: $game
Gets the current category/game set for your channel

Other examples 
$category[$target] 
When in a command, gets the category/game set for the target user.

$category[$user] 
Gets the category/game set for associated user (i.e. who triggered command, pressed button, etc).

$category[ChannelOne] 
Gets the category/game set for a specific channel.

$categoryImageUrl 
Gets the url for the image url of your last streamed category.

Other examples 
$categoryImageUrl[$target] 
When in a command, gets the image url of the last streamed category for the target channel.

$categoryImageUrl[$user] 
Gets the image url of the last streamed category for associated user (Ie who triggered command, pressed button, etc).

$categoryImageUrl[ebiggz] 
Gets the image url of the last streamed category for a specific channel.

$categoryImageUrl[ebiggz, 285x380] 
Get a different image size (use aspect ratio 4:3). Default is 285x380.

$ceil[num] 
Rounds up the given number to the nearest whole number.

$channelGoalCurrentAmount 
The current amount of the current channel goal.

Other examples 
$channelGoalCurrentAmount 
Gets the current amount for the most recently created active channel goal, or the channel goal that triggered the event.

$channelGoalCurrentAmount[type] 
Gets the current amount for the active channel goal of this specific type. Types are follow, sub, subpoint, newsub, or newsubpoint.

$channelGoalDescription 
The description of the current channel goal.

Other examples 
$channelGoalDescription 
Gets the description for the most recently created active channel goal, or the channel goal that triggered the event.

$channelGoalDescription[type] 
Gets the description for the active channel goal of this specific type. Types are follow, sub, subpoint, newsub, or newsubpoint.

$channelGoalTargetAmount 
The target amount of the current channel goal.

Other examples 
$channelGoalTargetAmount 
Gets the target amount for the most recently created active channel goal, or the channel goal that triggered the event.

$channelGoalTargetAmount[type] 
Gets the target amount for the active channel goal of this specific type. Types are follow, sub, subpoint, newsub, or newsubpoint.

$charityCampaignGoal 
The goal amount for the current charity campaign

$charityCampaignTotal 
The total amount raised so far during the current charity campaign

$chatMessage 
Outputs the chat message from the associated command or event.

$chatMessageAnimatedEmoteUrls 
Outputs the URLs of a chat message's animated emotes from the associated command or event. Any emotes that don't have an animated version will return an empty string.

Other examples 
$chatMessageAnimatedEmoteUrls[1] 
Get the URL of a specific animated emote. If the emote isn't animated, the result will return an empty string.

$chatMessageEmoteNames 
Outputs the names of a chat message's emotes from the associated command or event.

Other examples 
$chatMessageEmoteNames[1] 
Get the name of a specific emote.

$chatMessageEmoteUrls 
Outputs the urls of a chat message's emotes from the associated command or event.

Other examples 
$chatMessageEmoteUrls[1] 
Get the url of a specific emote.

$chatMessageId 
Outputs the chat message ID from the associated command or event.

$chatMessages[username] 
Displays the number of chat messages for a viewer (leave blank to use current viewer)

$chatMessageTextOnly[trimCommandTriggerDefaultTrue] 
Outputs the chat message text from the associated command or chat event, with any emotes, URLs, or cheermotes removed

Other examples 
$chatMessageTextOnly 
Gets the message text with the command trigger removed, and with any emotes, URLs, or cheermotes removed.

$chatMessageTextOnly[true] 
Gets the message text with the command trigger removed, and with any emotes, URLs, or cheermotes removed.

$chatMessageTextOnly[false] 
Gets the message text (including command trigger) with any emotes, URLS, or cheermotes removed.

$chatUserColor 
Outputs the chatters display color from a command or event.

Other examples 
$chatUserColor[$target] 
When in a command, gets the users color for the target user.

$chatUserColor[$user] 
Gets the color for associated user (Ie who triggered command, pressed button, etc).

$cheermoteAmounts 
Outputs the amounts cheered for each instance of a chat message's cheermotes from the associated command or event.

Other examples 
$cheermoteAmounts[1] 
Get the amount cheered using a specific instance of a cheermote.

$cheermoteAnimatedUrls 
Outputs the animated URLs of a chat message's cheermotes from the associated command or event.

Other examples 
$cheermoteAnimatedUrls[1] 
Get the animated URL of a specific instance of a cheermote.

$cheermoteColors 
Outputs the text colors (in #RRGGBB format) of a chat message's cheermotes from the associated command or event.

Other examples 
$cheermoteColors[1] 
Get the text color (in #RRGGBB format) of a specific instance of a cheermote.

$cheermoteNames 
Outputs the names of a chat message's cheermotes from the associated command or event.

Other examples 
$cheermoteNames[1] 
Get the name of a specific instance of a cheermote.

$cheermoteUrls 
Outputs the URLs of a chat message's cheermotes from the associated command or event.

Other examples 
$cheermoteUrls[1] 
Get the URL of a specific instance of a cheermote.

$commafy[number] 
Adds the appropriate commas to a number.

$commandTrigger 
The trigger of the issued command.

$concat[text, text, ...] 
Appends text together

$convertFromJSON[json text] 
Converts JSON text into a raw object instance

$convertToJSON[rawValue] 
Converts a raw value into JSON text

Other examples 
$convertToJSON[rawValue, true] 
Converts a raw value into pretty-printed JSON text

$count 
Displays the number of times the given command has been run.

$counter[name] 
Displays the value of the given counter.

$currency[currencyName, username] 
How much of the given currency the given user has.

$currencyRank[currencyName, username] 
Returns the rank of the given user based on how much of the given currency they have.

$currentViewerCount 
Get the number of people viewing your stream.

$customRoleUserCount[role] 
Get the number of people in a custom role.

$customRoleUsers[role] 
Returns an array of all the users in the specified custom role.

$customVariable[name] 
Get the data saved in the custom variable.

Other examples 
$customVariable[name, 1] 
Get an array item by providing an array index as a second argument.

$customVariable[name, property] 
Get a property by providing a property path (using dot notation) as a second argument.

$customVariable[name, null, exampleString] 
Set a default value in case the custom variable doesn't exist yet.

$customVariableKeys[name] 
Get the array of keys for an object saved in the custom variable.

Other examples 
$customVariableKeys[name, 1] 
Get the array of keys for an object which is an array item by providing an array index as a second argument.

$customVariableKeys[name, property] 
Get the array of keys for an object property by providing a property path (using dot notation) as a second argument.

$date 
The current date formatted as MMM Do YYYY

Other examples 
$date[dddd MMMM Do] 
Format with the preferred tokens.

$date[MMM Do YYYY, 2, days] 
Adds 2 days to the current date (or use other units i.e. months, years, etc.).

$date[MMM Do YYY, -2, days] 
Subtract 2 days from the current date (or use other units i.e. months, years, etc.).

$decodeFromHtml[text] 
Decodes input text from an HTML-encoded string

$decodeFromUrl[text] 
Decodes input text from a URL-encoded string

$discordTimestamp[] 
Outputs a discord timestamp that shows the appropriate time for all users in their own timezone.

Other examples 
$discordTimestamp[] 
Create discord timestamp using your current time.

$discordTimestamp[2076-01-26 13:00:00] 
Create discord timestamp using specified time, in default discord format.

$discordTimestamp[2076-01-26 13:00:00:t] 
Create a 'short time' discord timestamp. EX: 01:00 | 1:00 PM

$discordTimestamp[2076-01-26 13:00:00:T] 
Create a 'long time' discord timestamp. EX: 01:00:00 | 01:00:00 PM

$discordTimestamp[2076-01-26 13:00:00:d] 
Create a 'short date' discord timestamp. EX: 1/26/2076 | 26/01/2076

$discordTimestamp[2076-01-26 13:00:00:D] 
Create a 'long date' discord timestamp. EX: January 26, 2076 | 26 January 2076

$discordTimestamp[2076-01-26 13:00:00:f] 
Create a 'short date/time' discord timestamp. EX: January 26, 2076 1:00 PM | 26 January 2076 13:00

$discordTimestamp[2076-01-26 13:00:00:F] 
Create a 'long date/time' discord timestamp. EX: Sunday, January 26, 2076 1:00 PM | Sunday, 26 January 2076, 13:00

$discordTimestamp[2076-01-26 13:00:00:R] 
Create a 'relative' discord timestamp. EX: 'in 53 years' | 'in 23 minutes'

$discordTimestamp[13:00:00] 
Create discord timestamp using a specified time on the current date.

$discordTimestamp[now, R] 
Create discord timestamp using current date and time in a specified format.

$effectOutput[name] 
Get data that was outputted by a prior effect.

Other examples 
$effectOutput[name, 1] 
Get an array item by providing an array index as a second argument.

$effectOutput[name, property] 
Get a property by providing a property path (using dot notation) as a second argument.

$effectOutput[name, null, exampleString] 
Set a default value in case the effect output doesn't exist yet.

$effectOutput[name, property, exampleString] 
Set a default value in case the effect output doesn't have data at the specified property path.

$effectQueueLength[queueName] 
Returns the length of an effect queue. Useful for showing queue length in a command response.

$encodeForHtml[text] 
Encodes input text for safe use within HTML templates

$encodeForUrl[text] 
Encodes input text for use in a URL

$ensureNumber[input, defaultNumber] 
Guarantees a number output. If the input is a number, it is passed through. If it's not, the given default number is used instead.

$evalJs[`` code ``, ...parameters] 
Evaluates the given js in a sandboxed browser instance.

Parameters can be accessed via parameters[N] within the js.
Event metadata can be accessed via metadata.*

You must use return to return a result from the evaluation.

Other examples 
$evalJs[``return parameters[0]``, test] 
Returns the first parameter passed to $evalJS: "test"

$evalJs[``return metadata.username``] 
Returns the username from the event's metadata

$evalJs[``return await Firebot.sum[1,2,3,4]``] 
Calls the sum firebot api and returns the result

$evalVars[text] 
Evaluate $variables in a string of text. Useful for evaluating text $vars from an external source (ie a txt file or API)

$extraLifeDonations 
Returns information on extra life donations.

Other examples 
$extraLifeDonations[amount] 
Returns top donation for currently signed in extra life account.

$extraLifeDonations[amount, 1, participantID] 
Returns top donation for specified participantID.

$extraLifeDonations[amount, 3, participantID] 
Returns top 3 donations for participantID.

$extraLifeDonations[createdDateUTC, 5, participantID] 
Returns 5 most recent donations for participantID.

$extraLifeDonations[createdDateUTC, 5, participantID, true] 
Returns 5 most recent donations for participantID in JSON format.

$extraLifeDonations[amount, 3, null, true] 
Returns top 3 donations for current signed in extra life account in JSON format.

$extraLifeIncentives 
Returns information on extra life incentives. See examples for details.

Other examples 
$extraLifeIncentives[] 
Returns one incentive for the logged in extra life account.

$extraLifeIncentives[Play one handed] 
Returns one incentive with the description 'Play one handed' for the logged in extra life account.

$extraLifeIncentives[Play one handed, 1, participantID] 
Returns one incentive with the description 'Play one handed' for the given participant id.

$extraLifeIncentives[null, 3, participantID] 
Returns three incentives for given participant ID.

$extraLifeIncentives[null, 10, null, true] 
Returns ten incentives for current logged in extra life account in JSON format.

$extraLifeInfo 
Returns specified data from your extra life profile. See examples for details.

Other examples 
$extraLifeInfo[fundraisingGoal] 
Returns the fundraising goal for the current logged in extra life account.

$extraLifeInfo[fundraisingGoal, participantID] 
Returns the fundraising goal for the given participantID.

$extraLifeInfo[eventName, participantID] 
Returns the fundraising event name, e.g. Extra Life 2024.

$extraLifeInfo[donateLink, participantID] 
Returns the donation link.

$extraLifeInfo[profileLink, participantID] 
Returns the profile link.

$extraLifeInfo[sumDonations, participantID] 
Returns the sum of current donations.

$extraLifeInfo[sumPledges, participantID] 
Returns the sum of current pledges.

$extraLifeInfo[numIncentives, participantID] 
Returns the number of incentives.

$extraLifeInfo[numMilestones, participantID] 
Returns the number of milestones.

$extraLifeInfo[numDonations, participantID] 
Returns the number of donations.

$extraLifeInfo[avatarImageURL, participantID] 
Returns the url for the extra life avatar image.

$extraLifeInfo[null, null, true] 
Get all profile data for the current logged in extra life account in JSON format.

$extraLifeMilestones 
Returns information on extra life milestones. See examples for details.

Other examples 
$extraLifeMilestones[] 
Returns the next milestone for the logged in extra life account.

$extraLifeMilestones[null, 1, participantID] 
Returns the next milestone for the given participant id.

$extraLifeMilestones[75, 1, participantID] 
Returns a milestone with the goal of $75 for the given participant id.

$extraLifeMilestones[75] 
Returns a milestone with the goal of $75 for the logged in extra life account.

$extraLifeMilestones[null, 3, participantID, true] 
Returns three milestones in JSON format.

$false 
Returns a literal false boolean value; Useful in comparisons such as in $if[]

$fileExists[path\to\file.txt] 
Returns true if a file exists, otherwise returns false.

$fileLineCount["path/to/file.txt"] 
Count the number of lines in a text file.

$filesInDirectory[path\to\dir\] 
Returns an array of full filepaths in the given directory. Does not include subdirectories

Other examples 
$filesInDirectory[path\to\dir\, regexp, flags] 
Lists files matching the regexp filter

$floor[num] 
Rounds down the given number to the nearest whole number.

$followAge[username] 
The time a given viewer has been following the channel, in days by default.

Other examples 
$followAge[$user] 
Gets how long the associated user (i.e. who triggered command, pressed button, etc) has been following the channel (in days).

$followAge[$target] 
Gets how long the target user has been following the channel (in days).

$followAge[username, unitOfTime] 
Gets how long the specified username has been following the channel in a specific unit of time (in years, months, days, hours, or minutes).

$followCount 
The number of follows you currently have.

Other examples 
$followCount[$target] 
When in a command, gets the follow count for the target user.

$followCount[$user] 
Gets the follow count for associated user (Ie who triggered command, pressed button, etc).

$followCount[ChannelOne] 
Gets the follow count for a specific channel.

$hasRole[user, role] 
Returns true if the user has the specified role. Only valid within $if

$hasRoles[user, any|all, role, role2, ...] 
Returns true if the user has the specified roles. Only valid within $if

Other examples 
$hasRoles[$user, any, mod, vip] 
returns true if $user is a mod OR VIP

$hasRoles[$user, all, mod, vip] 
Returns true if $user is a mod AND a VIP

$if[condition, when_true, when_false] 
Returns the parameter based on the condition's result.

Other examples 
$if[$user === Jim, JIM] 
Returns JIM if the user is Jim, otherwise returns empty text

$if[$user === Jim, JIM, JOHN] 
Returns JIM if the user is Jim, otherwise returns JOHN

$isAdBreakRunning 
Whether or not an ad break is currently running

$isUserInChat[username] 
Outputs true if a user is currently connected to Twitch chat, false if not

$isWhisper 
Returns true if the chat message that triggered a command is a whisper, otherwise returns false.

$loopCount 
0 based count for the current loop iteration inside of a Loop Effects effect

$loopItem 
The item for current loop iteration inside of a Loop Effects effect using Array loop mode

$lowercase[text] 
Makes the entire given text string lowercase.

$math[expression] 
Evaluate a math equation using math.js

$max[num1, num2, ...] 
Returns the highest-value numbered passed

$min[num1, num2, ...] 
Returns the lowest-value numbered passed

$NALL[condition, condition, ...] 
Returns true if any of the conditions return false

Other examples 
$NALL[a === a, b === c] 
Returns true as b does not equals c

$NAND[condition, condition, ...] 
Returns true if any of the conditions return false

Other examples 
$NAND[a === a, b === c] 
Returns true as b does not equals c

$NANY[condition, condition, ...] 
Returns true if all of the conditions return false

Other examples 
$NANY[a === b, b === c] 
Returns true as a does not equal be and b does not equals c

$NOR[condition, condition, ...] 
Returns true if all of the conditions return false

Other examples 
$NOR[a === b, b === c] 
Returns true as a does not equal be and b does not equals c

$NOT[condition] 
Returns the opposite of the condition's result. Only works within $if[]

Other examples 
$NOT[1 === 1] 
Returns false as the condition is true

$null 
Returns a literal null value; Useful in comparisons such as in $if[]

$objectWalkPath[subject | JSON text, path.to.value] 
Returns the value from an object at the given dot-notated path

$obsColorValue 
Returns an OBS color value based on either a hex color code (e.g. #0066FF) or an HTML color name.

$obsInputActive 
Returns true if the OBS input is active or false if it is not.

$obsInputAudioBalance 
Returns the audio balance value of the OBS input.

$obsInputAudioSyncOffset 
Returns the audio sync offset (in milliseconds) of the OBS input.

$obsInputAudioTracks 
Returns the raw OBS audio tracks object of the OBS input.

$obsInputKind 
Returns the OBS internal name of the kind of OBS input.

$obsInputMonitorType 
Returns the audio monitor type of the OBS input. Values are None, Monitor Only, or Monitor and Output.

$obsInputMuted 
Returns true if the OBS input is muted or false if it is not.

$obsInputName 
Returns the name of the OBS input.

$obsInputSettings 
Returns the raw OBS settings object of the OBS input.

$obsInputShowing 
Returns true if the OBS input is currently showing or false if it is not.

$obsInputUuid 
Returns the UUID of the OBS input.

$obsInputVolumeDb 
Returns the volume level in dB of the OBS input.

$obsInputVolumeMultiplier 
Returns the volume level multiplier of the OBS input.

$obsIsConnected 
Returns 'true' if OBS is currently connected or 'false' if it is not.

$obsIsRecording 
Returns 'true' if OBS is currently recording or 'false' if it is not.

$obsIsStreaming 
Returns 'true' if OBS is currently streaming or 'false' if it is not.

$obsOldInputName 
Returns the previous name of the OBS input.

$obsSceneCollectionName 
The name of the OBS scene collection that triggered the event, or the name of the current OBS scene collection if there is no event. If OBS isn't running, it returns 'Unknown'.

$obsSceneName 
The name of the OBS scene that triggered the event, or the current OBS Scene if there is no event. If OBS isn't running, it returns 'Unknown'.

$OR[condition, condition, ...] 
Returns true if any of the conditions are true. Only works within $if[]

Other examples 
$OR[a === b, c === c] 
Returns true as c equals c

$ordinalIndicator[number] 
Adds an ordinal indicator suffix to a number (ie 'st', 'nd', 'rd')

$padNumber[value, places] 
Pads the given number up to the specified number of decimal places.

$presetListArg[name] 
Represents the given argument passed to this preset effect list.

$profilePageBytebinToken 
Get bytebin id for streamer profile. Access the json by going to https://bytebin.lucko.me/ID-HERE.

$pronouns 
Returns the pronouns of the given user. It uses https://pronouns.alejo.io/ to get the pronouns.

Other examples 
$pronouns[username, 0, they/them] 
Returns 'she/her' if available, otherwise uses they/them.

$pronouns[username, 1, they] 
Returns 'she' pronoun in she/her set if available, otherwise uses they.

$pronouns[username, 2, them] 
Returns 'her' pronoun in she/her set if available, otherwise uses them.

$quickStore[key] 
Retrieves or stores a value until the expression has finished evaluation

Other examples 
$quickStore[name, value] 
Stores "value" under the key "name"

$quickStore[name] 
Retrieves the value of what was stored under the key of "name"

$quote 
Get a random quote

Other examples 
$quote[#] 
Get a specific quote id.

$quoteAsObject 
Get a random quote in the form of a JSON Object.

Other examples 
$quoteAsObject[#] 
Get a specific quote id.

$quoteAsObject[#, property] 
Get only a specific property for a specific quote. Valid properties are id, createdAt, creator, originator, text and game.

$quoteAsObject[null, property] 
Get only a specific property for a random quote. Valid properties are id, createdAt, creator, originator, text and game.

$randomActiveViewer 
Get a random active chatter.

Other examples 
$randomActiveViewer[roleName] 
Filter to an active viewer in a specific role.

$randomActiveViewer[null, ignoreUser] 
Get a random active user that is NOT the ignore user

$randomAdvice 
Get some random advice!

$randomCustomRoleUser[role] 
Returns a random user that has the specified custom role.

$randomDadJoke 
Get a random dad joke!

$randomNumber[min, max] 
Get a random number between the given range.

$randomRedditImage[subredditName] 
Get a random image from a subreddit. (We do our best to check for bad images, but content warning none the less.)

$randomUUID 
Returns a random formated UUID eg 00000000-0000-0000-0000-000000000000

$randomViewer 
Get a random viewer in chat.

$rankLadderMode[rankLadderName] 
Returns the mode of the specified rank ladder (e.g. 'auto' or 'manual')

$rankValue[rankLadderName, rankName] 
Returns the threshold value of the specified rank in the rank ladder. Only applicable to auto rank ladders.

$rankValueDescription[rankLadderName, rankName] 
Returns the threshold value description of the specified rank in the rank ladder, i.e. '50 hours'. Only applicable to auto rank ladders.

$rawArgArray 
(Deprecated; use $argArray) Returns the raw array of command arguments

$rawArrayFilter[rawArray, matcher, propertyPath, removeMatches] 
(Deprecated: use $arrayFilter) Returns a new filtered raw array.

Other examples 
$rawArrayFilter[rawArray, 1, null, false] 
Filter out anything that doesn't equal 1

$rawArrayFilter[rawArray, 1, null, true] 
Filter out anything that equals 1

$rawArrayFilter[rawArray, value, key, true] 
Filter out any item in the array that has a key property twitch equals "value"

$rawBitsLeaderboard[count] 
(Deprecated: use $bitsLoaderboard) Returns a raw array of the all-time bits leaderboard of the streamer's channel, up to the specified count. Each item in the array has a username and amount property

Other examples 
$rawBitsLeaderboard[count, period] 
Returns a raw array of the bits leaderboard of the streamer's channel during the current specified period, up to the specified count. Each object in the array has a username and amount. Period can be 'day', 'week', 'month', 'year', or 'all'.

$rawBitsLeaderboard[count, period, startDate] 
Returns a raw array of the bits leaderboard of the streamer's channel during the specified period that occurred on the specified date, up to the specified count. Each object in the array has a username and amount. Period can be 'day', 'week', 'month', 'year', or 'all'.

$rawCustomRoleUsers[role] 
(Deprecated: use $customRoleUsers) Returns an array of all the users in the specified custom role.

$rawCustomVariable[name] 
Get the data saved in the custom variable.

Other examples 
$rawCustomVariable[name, 1] 
Get an array item by providing an array index as a second argument.

$rawCustomVariable[name, property] 
Get a property by providing a property path (using dot notation) as a second argument.

$rawCustomVariable[name, null, exampleString] 
Set a default value in case the custom variable doesn't exist yet.

$rawCustomVariableKeys[name] 
Get the array of keys for an object saved in the custom variable.

Other examples 
$rawCustomVariableKeys[name, property|index] 
Get the array of keys for an object property by providing a property path (using dot notation) as a second argument.

$rawQuoteAsObject 
(Deprecated: use $quoteAsObject) Get a random quote in the form of a raw Object.

Other examples 
$rawQuoteAsObject[#] 
Get a specific quote id.

$rawQuoteAsObject[#, property] 
Get only a specific property for a specific quote. Valid properties are id, createdAt, creator, originator, text and game.

$rawQuoteAsObject[null, property] 
Get only a specific property for a random quote. Valid properties are id, createdAt, creator, originator, text and game.

$rawRandomCustomRoleUser[role] 
Returns a random user that has the specified custom role as an object containing id, username, and displayName fields.

$rawTopBitsCheerers 
(Deprecated: use $topBitsCheerers) Returns a raw array containing the username of the top user who has cheered the most bits in the streamer's channel all-time.

Other examples 
$rawTopBitsCheerers[count] 
Returns a raw array of the usernames up to the specified count, of the users who have cheered the most bits in the streamer's channel all-time.

$rawTopBitsCheerers[count, period] 
Returns a raw array of the usernames up to the specified count, of the users who have cheered the most bits in the streamer's channel during the current specified period. Period can be 'day', 'week', 'month', 'year', or 'all'.

$rawTopBitsCheerers[count, period, startDate] 
Returns a raw array of the usernames up to the specified count, of the users who have cheered the most bits in the streamer's channel during the specified period that occurred on the specified date. Period can be 'day', 'week', 'month', 'year', or 'all'.

$rawTopCurrency[currencyName] 
Returns a raw array containing those with the most of the specified currency. Items in the array contain 'place', 'username' and 'amount' properties

$rawTopMetadata[metadataKey] 
Returns a raw array of users with the most of a given metadata key. Items contain 'username', 'place' and 'amount' properties

$rawTopViewTime[count] 
Returns a raw array containing users with the most view time(in hours). Items contain 'username', 'place' and 'minutes' properties

$rawUsernameArray 
(Deprecated: use $usernameArray) Returns a raw array of all usernames saved in the user db

$rawUserRoles[username, all|twitch|team|firebot|custom] 
(Deprecated: use $userRoles) Returns all roles of the user as a raw array

Other examples 
$rawUserRoles 
Returns all roles for the user

$rawUserRoles[$user] 
Returns all roles of the specified user

$rawUserRoles[$user, all] 
Returns all roles of the specified user as nested arrays in the order of: twitch, team, firebot and custom roles

$rawUserRoles[$user, firebot] 
Returns all firebot roles of the specified user

$rawUserRoles[$user, custom] 
Returns all custom roles of the specified user

$rawUserRoles[$user, twitch] 
Returns all Twitch roles of the specified user

$rawUserRoles[$user, team] 
Returns all Twitch team roles of the specified user

$readApi[url] 
Calls the given URL and returns the response as a string.

Other examples 
$readApi[url, object.path.here] 
Traverse a JSON response object.

$readFile[path\to\file.txt] 
Read contents of a text file.

Other examples 
$readFile[path\to\file.txt, 1] 
Read a specific line number from the file.

$readFile[path\to\file.txt, first] 
Read the first line from the file.

$readFile[path\to\file.txt, first, true] 
Removes leading, trailing, and empty lines before grabbing the first line

$readFile[path\to\file.txt, last] 
Read the last line from the file.

$readFile[path\to\file.txt, last, true] 
Removes leading, trailing, and empty lines before grabbing the last line

$readFile[path\to\file.txt, random] 
Read a random line from the file.

$readFile[path\to\file.txt, random, true] 
Removes leading, trailing, and empty lines before grabbing a random line

$regexExec[string, expression] 
Filter a string with a regular expression

Other examples 
$regexExec[string, expression, flags] 
Add flags to the regex evaluation.

$regexMatches[string, expression] 
Filter a string with a regular expression and return an array of all matches

Other examples 
$regexMatches[string, expression, flags] 
Add flags to the regex evaluation.

$regexTest[string, expression] 
Check whether a string matches a regular expression

Other examples 
$regexTest[string, expression, flags] 
Add flags to the regex evaluation.

$replace[textInput, searchValue, replacement] 
Replaces a search value with a replacement value

Other examples 
$replace[textInput, searchValue, replacement, true] 
Allows searching using a regular expression.

$replace[textInput, searchValue, replacement, true, flags] 
Add flags when using a regular expression.

$rewardCost 
The channel point cost of the reward

Other examples 
$rewardCost[rewardName] 
The channel point cost of the given reward. Name must be exact!

$rewardDescription 
The description of the reward

Other examples 
$rewardDescription[rewardName] 
The description of the given reward. Name must be exact!

$rewardImageUrl 
The image url of the award

Other examples 
$rewardDescription[rewardName] 
The description of the given reward. Name must be exact!

$rollDice[diceConfig] 
Rolls some dice based on the provided config, ie 2d6 or 2d10+1d12 or 1d10+3

Other examples 
$rollDice[1d6] 
Roll one 6-sided dice, outputs the sum

$rollDice[2d10+1d12] 
Roll two 10-sided dice and one 12-sided die, outputs the sum

$rollDice[2d6, show each] 
Outputs text containing both the sum of all roles and the values or each individual roll. IE: '10 (4, 6)

$round[num] 
Rounds the given number to the nearest whole number.

Other examples 
$round[num, places] 
Rounds the given number to the specified number of decimal places.

$runEffect[effectJson] 
Run an effect defined as json. Outputs an empty string. Please keep in mind that the power and flexibility afforded by this variable means it is very error prone. Only use if you know what you are doing.

Other examples 
$runEffect[``{"type":"firebot:chat","message":"Hello world"}``] 
Runs a chat message effect. You can get an effects JSON data via the UI via the overflow menu in the top right of the Edit Effect modal. (Copy Effect Json > For $runEffect[])

$scrambleText[text] 
Scrambles the input text

$secondsUntilNextAdBreak 
The number of seconds until the next schduled ad break

$setObjectProperty[object, propertyPath, value] 
Adds or updates a property's value in the given JSON object. For nested properties, you can use dot notation (e.g. some.property). Set value to null to remove property.

$splitText[text, separator] 
Splits text with the given separator and returns an array. Useful for Custom Variables.

$streamer 
Outputs the Streamer account username.

$streamTitle 
Gets the current stream title for your channel

Other examples 
$streamTitle[$target] 
When in a command, gets the stream title for the target channel.

$streamTitle[$user] 
Gets the stream title for associated user (Ie who triggered command, pressed button, etc).

$streamTitle[ebiggz] 
Gets the stream title for a specific channel.

$subCount 
The number of subs you currently have.

$subNames 
Returns an array of subscriptions you currently have. Items contain 'username', 'tier' and 'isGift' properties

Other examples 
$subNames 
Returns: [{username: "firebottle", displayname: "FireBottle", tier: 2000, isGift:false}, {username: "ebiggz", displayname: "EBiggz", tier: 1000, isGift:true}] To be used with array or custom variables

$subPoints 
The number of sub points you currently have.

$target 
Similar to the $arg variable but strips out any leading '@' symbols. Useful when the argument is expected to be a username.

Other examples 
$target[#] 
Grab the target at the given index (IE with '!command @ebiggz @TheLastMage', $target[2] would be 'TheLastMage')

$textContains[text, search] 
Returns true if text contains search, otherwise returns false

$textLength[text] 
Returns the length of the input text

$textPadEnd[input, count, countIsLength, padChar] 
Pads the end of text

Other examples 
$textPadEnd[input, count, $false, " "] 
Adds 'count' number of spaces to the end of input

$textPadEnd[input, count, $true, " "] 
Adds spaces to the end of the input until the length of the output equals 'count'

$textPadStart[input, count, countIsLength, padChar] 
Pads the start of text

Other examples 
$textPadStart[input, count, $false, " "] 
Adds 'count' number of spaces to the start of input

$textPadStart[input, count, $true, " "] 
Adds spaces to the start of the input until the length of the output equals 'count'

$textSubstring[text, start, end] 
Returns a substring of the provided text based on the range

$time 
Outputs the current time.

Other examples 
$time[format] 
Outputs the current time in a specific format. Format uses moment.js formatting rules.

$topBitsCheerers 
Returns an array containing the username of the top user who has cheered the most bits in the streamer's channel all-time.

Other examples 
$topBitsCheerers[count] 
Returns an array of the usernames up to the specified count, of the users who have cheered the most bits in the streamer's channel all-time.

$topBitsCheerers[count, period] 
Returns an array of the usernames up to the specified count, of the users who have cheered the most bits in the streamer's channel during the current specified period. Period can be 'day', 'week', 'month', 'year', or 'all'.

$topBitsCheerers[count, period, startDate] 
Returns an array of the usernames up to the specified count, of the users who have cheered the most bits in the streamer's channel during the specified period that occurred on the specified date. Period can be 'day', 'week', 'month', 'year', or 'all'.

$topCurrency[currencyName] 
Comma separated list of users with the most of the given currency. Defaults to top 10, you can provide a custom number as a second argument.

$topCurrencyUser[currencyName, position, username/amount] 
Get the username or amount for a specific position in the top currency

Other examples 
$topCurrencyUser[Points, 1, username] 
Get the top Points username

$topCurrencyUser[Points, 5, amount] 
Get the top Points amount at 5th position

$topMetadata[metadataKey] 
Comma separated list of users with the most of the given metadata key. Defaults to top 10, you can provide a custom number as a second argument.

$topMetadataUser[metadataKey, position, username/amount] 
Get the username or amount for a specific position in the top metadata list

Other examples 
$topMetadataUser[slaps, 1, username] 
Get the username for the top slapper

$topMetadataUser[slaps, 5, amount] 
Get the number of slaps for the top 5th slapper

$topViewTime[count] 
Comma separated list of users with the most view time (in hours). Defaults to top 10, you can provide a custom number as a second argument.

$trim[text] 
Removes any whitespace from the beginning and end of input text.

$trimEnd[text] 
Removes any whitespace from the end of input text.

$trimStart[text] 
Removes any whitespace from the beginning of input text.

$true 
Returns a literal true boolean value; Useful in comparisons such as in $if[]

$twitchChannelUrl[channel] 
Returns the Twitch URL for the given channel name (e.g. https://www.twitch.tv/ReallyCoolFirebotUser).

$unixTimestamp 
The current date formatted as seconds since January 1, 1970 00:00:00 UTC

Other examples 
$unixTimestamp[2011-03-18 18:49 UTC] 
Unix timestamp for provided date

$unixTimestamp[07/28/2024, MM/DD/YYYY] 
Unix timestamp for provided date with specified format

$unixTimestamp[$accountCreationDate] 
Unix timestamp for provided account creation date

$unixTimestamp[$date[MMM Do YYYY, -14, days], MMM Do YYYY] 
Unix timestamp for date variable set to 2 weeks ago formatted as MMM Do YYYY

$uppercase[text] 
Makes the entire given text string uppercase.

$uptime 
The current stream uptime

$user 
The associated user (if there is one) for the given trigger

$userAvatarUrl 
Aliases: $userProfileImageUrl
Gets the url for the avatar of the associated user (Ie who triggered command, pressed button, etc).

Other examples 
$userAvatarUrl[$target] 
When in a command, gets the the url for the avatar of the target user.

$userAvatarUrl[ebiggz] 
Gets the url for the avatar of a specific user.

$userBadgeUrls 
Outputs the URLs of a chatter's selected badge images from the associated command or event.

Other examples 
$userBadgeUrls[1] 
Get the URL of a chatter's selected badge image.

$userBio 
Aliases: $userAbout, $userDescription
Gets the bio/description of the associated user (ie who triggered command, pressed button, etc).

Other examples 
$userBio[$target] 
When in a command, gets the the bio/description of the target user.

$userBio[ebiggz] 
Gets the bio/description of a specific user.

$userDisplayName[username] 
Gets the formatted display name for the given username. Searches local viewer DB first, then Twitch API.

$userExists[username] 
Outputs 'true' if a user exists in Firebot's database, 'false' if not

$userId[username] 
Gets the user ID for the given username. Searches local viewer DB first, then Twitch API.

$useridname 
(Deprecated: Use $user or $username) The associated underlying user identifying name for the given trigger.

$userIsBanned[username] 
Returns true if the specified user is currently banned (not just timed out), otherwise returns false.

$userIsTimedOut[username] 
Returns true if the specified user is currently timed out, otherwise returns false.

$userMetadata[username, metadataKey] 
Get the metadata associated with the user.

Other examples 
$userMetadata[username, metadataKey, defaultValue] 
Provide a default value if one doesn't exist for the user.

$userMetadata[username, metadataKey, null, propertyPath] 
Provide a property path (using dot notation) or array index as a second argument.

$username 
The associated user (if there is one) for the given trigger

$usernameArray 
Returns an array of all usernames saved in the user db

$userRoles[username, all|twitch|team|firebot|custom] 
Returns an array containing all roles of the user

Other examples 
$userRoles 
Returns all roles for the user

$userRoles[$user] 
Returns all roles of the specified user

$userRoles[$user, all] 
Returns all roles of the specified user as nested arrays in the order of: twitch, team, firebot and custom

$userRoles[$user, firebot] 
Returns all firebot roles of the specified user

$userRoles[$user, custom] 
Returns all custom roles of the specified user

$userRoles[$user, twitch] 
Returns all Twitch roles of the specified user

$userRoles[$user, team] 
Returns all Twitch team roles of the specified user

$videoDuration[filePathOrUrl] 
Attempts to retrieve video duration.

$viewerHasRank[username, rankLadderName, rankName] 
Whether the viewer has the specified rank in the specified rank ladder

$viewerNamesInRank[rankLadderName, rankName] 
Returns an comma separated list of viewer names in the specified rank

$viewerNextRank[username, rankLadderName] 
Returns the the next rank in specified rank ladder for the user

$viewerRank[username, rankLadderName] 
Returns the viewers current rank name for the specified rank ladder

$viewersInRankArray[rankLadderName, rankName] 
Returns an array of viewer objects in the specified rank. Viewer object properties: _id, username, displayName

$viewTime[username] 
Displays the view time (in hours) of a given viewer (leave blank to use current viewer)

$word[text, #] 
Get a word at the specified position in a given sentence

Other examples 
$word[This is a test, 4] 
Get the 4th word. In this example: 'test'